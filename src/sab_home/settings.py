"""
Django settings for sab_home project.

Generated by 'django-admin startproject' using Django 5.1.11.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y0gkxvvu6krv&pnl94tyh_ry2c@=2_7ox)p+t06o5m%bf-b2cf'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'market',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sab_home.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sab_home.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# ------------------------------------------------------------------------------
# DATABASE CONFIGURATION
# ------------------------------------------------------------------------------
# This section defines how Django should connect to the backing database(s).
#
# Out-of-the-box we ship with **SQLite** for simplicity:
#   • ENGINE  : Uses Django’s built-in SQLite backend.
#   • NAME    : Path to the single-file database; placed next to BASE_DIR
#               so the file ends up at `<project-root>/db.sqlite3`.
#
# This is perfect for **local development**, but **NOT** for production.
# ------------------------------------------------------------------------------
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# ------------------------------------------------------------------------------
# ENVIRONMENT-BASED DATABASE SWITCH
# ------------------------------------------------------------------------------
# To make the project deploy-ready we support a DATABASE_URL environment
# variable (Twelve-Factor style).  If present, we override the entire
# `DATABASES` dict so you can point the app to Postgres, TimescaleDB,
# MySQL, etc., without touching code.
#
# Example env values:
#   • `postgresql://user:pass@localhost:5432/mydb`
#   • `timescale://user:pass@localhost:5432/mydb`
#
# dj_database_url.parse() will translate the URL into Django’s dictionary
# format and add sensible defaults.
#
# conn_max_age=300 keeps connections alive for 5 minutes to reduce latency
# under load (works well on PaaS like Heroku, Dokku, Railway, Fly.io, …).
#
# engine="timescale.db.backends.postgresql" instructs dj_database_url to
# use the TimescaleDB backend (Postgres extension for time-series).
# ------------------------------------------------------------------------------
DATABASE_URL = config("DATABASE_URL", default="", cast=str)
if DATABASE_URL != "":
    import dj_database_url

    DATABASES = {
        "default": dj_database_url.config(
            default=DATABASE_URL,
            conn_max_age=300,                       # Persistent connections
            engine="timescale.db.backends.postgresql",  # TimescaleDB
        )
    }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
